'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import Navigation from '../../components/Navigation';

interface BotTemplate {
  id: string;
  name: string;
  description: string;
  icon: string;
  category: string;
  features: string[];
  setupData?: {
    required: string[];
    optional?: string[];
  };
  examplePrompt?: string;
  useCase: string;
  color: string;
}

const botTemplates: BotTemplate[] = [
  {
    id: 'hr-recruiter',
    name: '–ë–æ—Ç –¥–ª—è –Ω–∞–π–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
    description: '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Ä–µ–∫—Ä—É—Ç–µ—Ä –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –æ—Ç–±–æ—Ä–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤. –ü—Ä–æ–≤–æ–¥–∏—Ç –∏–Ω—Ç–µ—Ä–≤—å—é, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏, —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–¥–∏–¥–∞—Ç–µ.',
    icon: 'üßë‚Äçüíº',
    category: 'HR',
    features: [
      '–ü–µ—Ä–≤–∏—á–Ω—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤',
      '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é',
      '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ –∏ –∫–æ–º–ø–∞–Ω–∏–∏',
      '–û—Ç–≤–µ—Ç—ã –Ω–∞ FAQ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤',
      '–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–Ω–¥–∏–¥–∞—Ç–µ',
      '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è'
    ],
    setupData: {
      required: [
        '–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–¥–æ–ª–∂–Ω–æ—Å—Ç—å, –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è)',
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ (–º–∏—Å—Å–∏—è, –∫—É–ª—å—Ç—É—Ä–∞, —É—Å–ª–æ–≤–∏—è)',
        '–ö–ª—é—á–µ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∫—Ä–∏–Ω–∏–Ω–≥–∞ (3-5 –≤–æ–ø—Ä–æ—Å–æ–≤)',
        'FAQ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Å –æ—Ç–≤–µ—Ç–∞–º–∏',
        '–¢–æ–Ω –æ–±—â–µ–Ω–∏—è (–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π/–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π)'
      ],
      optional: [
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã)',
        '–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏'
      ]
    },
    examplePrompt: '–í—ã ‚Äì –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π HR-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–∏—á–Ω–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º: –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π—Ç–µ, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é, –∑–∞–¥–∞–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ–± –æ–ø—ã—Ç–µ, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏.',
    useCase: '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è HR-–æ—Ç–¥–µ–ª–æ–≤ –∏ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–æ–≤—ã—Ö –∞–≥–µ–Ω—Ç—Å—Ç–≤',
    color: 'from-blue-500 to-purple-600'
  },
  {
    id: 'complaint-handler',
    name: '–ë–æ—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∂–∞–ª–æ–± –∫–ª–∏–µ–Ω—Ç–æ–≤',
    description: '–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∂–∞–ª–æ–±—ã –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º.',
    icon: 'üìù',
    category: '–ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å',
    features: [
      '–ü—Ä–∏–µ–º –∂–∞–ª–æ–± 24/7',
      '–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–±–ª–µ–º',
      '–≠—Å–∫–∞–ª–∞—Ü–∏—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º',
      '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞'
    ],
    useCase: '–î–ª—è –∫–æ–º–ø–∞–Ω–∏–π —Å –≤—ã—Å–æ–∫–∏–º –æ–±—ä–µ–º–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤',
    color: 'from-red-500 to-red-600'
  },
  {
    id: 'tech-support',
    name: '–ë–æ—Ç –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
    description: '–†–µ—à–∞–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –ø—Ä–æ–±–ª–µ–º.',
    icon: 'üîß',
    category: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    features: [
      '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º',
      '–ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π',
      '–£–¥–∞–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å'
    ],
    useCase: '–î–ª—è IT-–∫–æ–º–ø–∞–Ω–∏–π –∏ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤',
    color: 'from-green-500 to-green-600'
  },
  {
    id: 'sales-manager',
    name: '–ë–æ—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
    description: '–í–µ–¥–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤–æ—Ä–æ–Ω–∫—É –ø—Ä–æ–¥–∞–∂, –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞–∫–∞–∑–æ–≤.',
    icon: 'üíº',
    category: '–ü—Ä–æ–¥–∞–∂–∏',
    features: [
      '–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–æ–≤',
      '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
      '–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏',
      '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤'
    ],
    useCase: '–î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–¥–∞–∂',
    color: 'from-purple-500 to-purple-600'
  },
  {
    id: 'marketing-assistant',
    name: '–ë–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥',
    description: '–ü–æ–º–æ–≥–∞–µ—Ç —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è.',
    icon: 'üìä',
    category: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
    features: [
      '–ê–Ω–∞–ª–∏–∑ –∞—É–¥–∏—Ç–æ—Ä–∏–∏',
      '–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
      '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–π',
      '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'
    ],
    useCase: '–î–ª—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –∞–≥–µ–Ω—Ç—Å—Ç–≤',
    color: 'from-orange-500 to-orange-600'
  }
];

export default function BotTemplates() {
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ');
  const router = useRouter();

  const categories = ['–í—Å–µ', ...Array.from(new Set(botTemplates.map(bot => bot.category)))];
  
  const filteredBots = selectedCategory === '–í—Å–µ' 
    ? botTemplates 
    : botTemplates.filter(bot => bot.category === selectedCategory);

  const handleCreateBot = (template: BotTemplate) => {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞ —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    router.push(`/add-bot?template=${template.id}`);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Navigation />
      
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-7xl mx-auto">
          {/* Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              ü§ñ –ú–∞–≥–∞–∑–∏–Ω —à–∞–±–ª–æ–Ω–æ–≤ –±–æ—Ç–æ–≤
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω –±–æ—Ç–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ö–∞–∂–¥—ã–π —à–∞–±–ª–æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
            </p>
          </div>

          {/* Category Filter */}
          <div className="flex flex-wrap justify-center gap-3 mb-8">
            {categories.map((category) => (
              <button
                key={category}
                onClick={() => setSelectedCategory(category)}
                className={`px-6 py-2 rounded-full font-medium transition-all ${
                  selectedCategory === category
                    ? 'bg-blue-600 text-white shadow-lg'
                    : 'bg-white text-gray-600 hover:bg-gray-100 border border-gray-200'
                }`}
              >
                {category}
              </button>
            ))}
          </div>

          {/* Bot Templates Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredBots.map((template) => (
              <div
                key={template.id}
                className="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group"
              >
                {/* Card Header */}
                <div className={`bg-gradient-to-r ${template.color} p-6 text-white`}>
                  <div className="flex items-center justify-between mb-4">
                    <span className="text-4xl">{template.icon}</span>
                    <span className="bg-white/20 px-3 py-1 rounded-full text-sm font-medium">
                      {template.category}
                    </span>
                  </div>
                  <h3 className="text-xl font-bold mb-2">{template.name}</h3>
                  <p className="text-white/90 text-sm">{template.description}</p>
                </div>

                {/* Card Body */}
                <div className="p-6">
                  <div className="mb-6">
                    <h4 className="font-semibold text-gray-900 mb-3">–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
                    <ul className="space-y-2">
                      {template.features.map((feature, index) => (
                        <li key={index} className="flex items-center text-sm text-gray-600">
                          <span className="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                          {feature}
                        </li>
                      ))}
                    </ul>
                  </div>

                  {template.setupData && (
                    <div className="mb-6">
                      <h4 className="font-semibold text-gray-900 mb-3">–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ:</h4>
                      <div className="text-sm text-gray-600">
                        <div className="mb-2">
                          <span className="font-medium">–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:</span>
                          <ul className="ml-4 mt-1">
                            {template.setupData.required.map((item, index) => (
                              <li key={index} className="flex items-start">
                                <span className="text-red-500 mr-1">‚Ä¢</span>
                                {item}
                              </li>
                            ))}
                          </ul>
                        </div>
                        {template.setupData.optional && (
                          <div>
                            <span className="font-medium">–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ:</span>
                            <ul className="ml-4 mt-1">
                              {template.setupData.optional.map((item, index) => (
                                <li key={index} className="flex items-start">
                                  <span className="text-blue-500 mr-1">‚Ä¢</span>
                                  {item}
                                </li>
                              ))}
                            </ul>
                          </div>
                        )}
                      </div>
                    </div>
                  )}

                  {template.examplePrompt && (
                    <div className="mb-6">
                      <h4 className="font-semibold text-gray-900 mb-3">–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–º–ø—Ç–∞:</h4>
                      <div className="bg-gray-50 p-3 rounded text-sm text-gray-600 italic">
                        "{template.examplePrompt}"
                      </div>
                    </div>
                  )}

                  <div className="mb-6">
                    <p className="text-sm text-gray-500 italic">{template.useCase}</p>
                  </div>

                  <button
                    onClick={() => handleCreateBot(template)}
                    className={`w-full bg-gradient-to-r ${template.color} text-white py-3 px-6 rounded-lg font-medium hover:shadow-lg transition-all duration-300 group-hover:scale-105`}
                  >
                    –°–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞
                  </button>
                </div>
              </div>
            ))}
          </div>

          {/* Bottom CTA */}
          <div className="text-center mt-16">
            <div className="bg-white rounded-xl shadow-lg p-8 max-w-2xl mx-auto">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                –ù–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω?
              </h2>
              <p className="text-gray-600 mb-6">
                –°–æ–∑–¥–∞–π—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å –Ω—É–ª—è –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button
                  onClick={() => router.push('/add-bot')}
                  className="bg-blue-600 text-white px-8 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors"
                >
                  –°–æ–∑–¥–∞—Ç—å —Å –Ω—É–ª—è
                </button>
                <button className="border border-gray-300 text-gray-700 px-8 py-3 rounded-lg font-medium hover:bg-gray-50 transition-colors">
                  –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}