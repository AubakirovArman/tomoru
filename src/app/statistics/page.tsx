'use client';

import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import Navigation from '../../components/Navigation';

export default function Statistics() {
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      router.push('/');
      return;
    }
    setLoading(false);
  }, [router]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Navigation />
      
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-7xl mx-auto">
          <div className="mb-8">
            <h1 className="text-3xl font-bold text-gray-900 mb-2">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h1>
            <p className="text-gray-600">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏ –≤–∞—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TOMORU AI</p>
          </div>

          {/* Stats Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="flex items-center">
                <div className="p-3 rounded-full bg-blue-100 text-blue-600">
                  üí¨
                </div>
                <div className="ml-4">
                  <p className="text-sm font-medium text-gray-600">–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π</p>
                  <p className="text-2xl font-bold text-gray-900">1,247</p>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="flex items-center">
                <div className="p-3 rounded-full bg-green-100 text-green-600">
                  ü§ñ
                </div>
                <div className="ml-4">
                  <p className="text-sm font-medium text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤</p>
                  <p className="text-2xl font-bold text-gray-900">8</p>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="flex items-center">
                <div className="p-3 rounded-full bg-purple-100 text-purple-600">
                  üì∫
                </div>
                <div className="ml-4">
                  <p className="text-sm font-medium text-gray-600">–ö–∞–Ω–∞–ª–æ–≤</p>
                  <p className="text-2xl font-bold text-gray-900">12</p>
                </div>
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-sm p-6">
              <div className="flex items-center">
                <div className="p-3 rounded-full bg-orange-100 text-orange-600">
                  ‚è±Ô∏è
                </div>
                <div className="ml-4">
                  <p className="text-sm font-medium text-gray-600">–í—Ä–µ–º—è –æ–Ω–ª–∞–π–Ω</p>
                  <p className="text-2xl font-bold text-gray-900">24—á</p>
                </div>
              </div>
            </div>
          </div>

          {/* Charts Section */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            <div className="bg-white rounded-lg shadow-sm p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º</h2>
              <div className="h-64 flex items-end justify-between space-x-2">
                {[40, 65, 45, 80, 55, 70, 85].map((height, index) => (
                  <div key={index} className="flex flex-col items-center">
                    <div 
                      className="bg-blue-500 rounded-t w-8 transition-all hover:bg-blue-600"
                      style={{ height: `${height}%` }}
                    ></div>
                    <span className="text-xs text-gray-500 mt-2">
                      {['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'][index]}
                    </span>
                  </div>
                ))}
              </div>
            </div>

            <div className="bg-white rounded-lg shadow-sm p-6">
              <h2 className="text-xl font-semibold text-gray-800 mb-4">üéØ –¢–æ–ø —Ñ—É–Ω–∫—Ü–∏–π</h2>
              <div className="space-y-4">
                {[
                  { name: '–ß–∞—Ç —Å AI', usage: 85, color: 'bg-blue-500' },
                  { name: '–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö', usage: 72, color: 'bg-green-500' },
                  { name: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞', usage: 68, color: 'bg-purple-500' },
                  { name: '–ü–µ—Ä–µ–≤–æ–¥—ã', usage: 45, color: 'bg-orange-500' },
                  { name: '–ö–æ–¥-—Ä–µ–≤—å—é', usage: 38, color: 'bg-red-500' },
                ].map((item, index) => (
                  <div key={index} className="flex items-center">
                    <div className="w-24 text-sm text-gray-600">{item.name}</div>
                    <div className="flex-1 mx-4">
                      <div className="bg-gray-200 rounded-full h-2">
                        <div 
                          className={`${item.color} h-2 rounded-full transition-all`}
                          style={{ width: `${item.usage}%` }}
                        ></div>
                      </div>
                    </div>
                    <div className="w-12 text-sm text-gray-500">{item.usage}%</div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Recent Activity */}
          <div className="bg-white rounded-lg shadow-sm p-6">
            <h2 className="text-xl font-semibold text-gray-800 mb-4">üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h2>
            <div className="space-y-4">
              {[
                { action: '–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –±–æ—Ç "–ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –∫–æ–¥—É"', time: '2 –º–∏–Ω—É—Ç—ã –Ω–∞–∑–∞–¥', icon: 'ü§ñ' },
                { action: '–û–±–Ω–æ–≤–ª–µ–Ω–∞ –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π "JavaScript"', time: '15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥', icon: 'üìö' },
                { action: '–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞"', time: '1 —á–∞—Å –Ω–∞–∑–∞–¥', icon: 'üì∫' },
                { action: '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É Excel', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', icon: 'üìã' },
                { action: '–ê–Ω–∞–ª–∏–∑ 500 —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω', time: '3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥', icon: 'üìä' },
              ].map((activity, index) => (
                <div key={index} className="flex items-center p-3 bg-gray-50 rounded-lg">
                  <div className="text-2xl mr-3">{activity.icon}</div>
                  <div className="flex-1">
                    <p className="text-gray-800">{activity.action}</p>
                    <p className="text-sm text-gray-500">{activity.time}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}